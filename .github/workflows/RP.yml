name: FreeRDP

on: workflow_dispatch
inputs:

      time:
        description: 'VM Time (Seconds, Maximum 72 hours)'
        required: true
        default: "21600"
        
jobs:
  build:

    runs-on: windows-latest
    steps:
    - name: Downloading Ngrok.
      run: |
        Invoke-WebRequest https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-windows-amd64.zip -OutFile ngrok.zip
        Invoke-WebRequest https://raw.githubusercontent.com/FDCI1337/FreeRDP2021/main/start.bat -OutFile start.bat

    - name: Extracting Ngrok Files.
      run: Expand-Archive ngrok.zip
    - name: Connecting to your Ngrok account.
      run: .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
    - name: Activating RDP access.
      run: | 
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server'-name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1
    - name: Creating Tunnel.
      run: Start-Process Powershell -ArgumentList '-Noexit -Command ".\ngrok\ngrok.exe tcp 3389"'
    - name: Connecting to your RDP.
      run: cmd /c start.bat
    - name: For keep VM alive (1)
      run: | 
        $vmtime = ${{ github.event.inputs.time }} / 12
        Start-Sleep -Seconds $vmtime
        echo "OK"
    - name: For keep VM alive (2)
      run: | 
        $vmtime = ${{ github.event.inputs.time }} / 12
        Start-Sleep -Seconds $vmtime
        echo "OK"
    - name: For keep VM alive (3)
      run: | 
        $vmtime = ${{ github.event.inputs.time }} / 12
        Start-Sleep -Seconds $vmtime
        echo "OK"
    - name: For keep VM alive (4)
      run: | 
        $vmtime = ${{ github.event.inputs.time }} / 12
        Start-Sleep -Seconds $vmtime
        echo "OK"
    - name: For keep VM alive (5)
      run: | 
        $vmtime = ${{ github.event.inputs.time }} / 12
        Start-Sleep -Seconds $vmtime
        echo "OK"
    - name: For keep VM alive (6)
      run: | 
        $vmtime = ${{ github.event.inputs.time }} / 12
        Start-Sleep -Seconds $vmtime
        echo "OK"
    - name: For keep VM alive (7)
      run: | 
        $vmtime = ${{ github.event.inputs.time }} / 12
        Start-Sleep -Seconds $vmtime
        echo "OK"
    - name: For keep VM alive (8)
      run: | 
        $vmtime = ${{ github.event.inputs.time }} / 12
        Start-Sleep -Seconds $vmtime
        echo "OK"
    - name: For keep VM alive (9)
      run: | 
        $vmtime = ${{ github.event.inputs.time }} / 12
        Start-Sleep -Seconds $vmtime
        echo "OK"
    - name: For keep VM alive (10)
      run: | 
        $vmtime = ${{ github.event.inputs.time }} / 12
        Start-Sleep -Seconds $vmtime
        echo "OK"
    - name: For keep VM alive (11)
      run: | 
        $vmtime = ${{ github.event.inputs.time }} / 12
        Start-Sleep -Seconds $vmtime
        echo "OK"
    - name: For keep VM alive (12)
      run: | 
        $vmtime = ${{ github.event.inputs.time }} / 12
        Start-Sleep -Seconds $vmtime
        echo "OK"
        
